{"version":3,"sources":["components/Toggle.js","components/Task.js","components/Tasks.js","components/TaskForm.js","App.js","reportWebVitals.js","index.js"],"names":["Toggle","onChange","e","props","checkDone","id","className","this","type","defaultChecked","task","done","htmlFor","Component","Task","color","style","StyleCompleted","textDecoration","fontSize","fontWeight","title","description","onClick","deleteTask","bind","Tasks","tasks","map","TaskForm","state","setState","target","name","value","onSubmit","addTask","preventDefault","clean","placeholder","protoTypes","PropTypes","func","App","newTask","length","newTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gwBAEMA,EAAM,iKACuC,OADvC,oCACVC,SAAS,SAAAC,GAAI,EAAKC,MAAMC,UAAU,EAAKD,MAAME,GAAG,EAAC,EAUhD,OAVgD,mCACjD,WACE,OAAO,gCACH,uBAAOC,UAAU,eACbD,GAAIE,KAAKJ,MAAME,GAAIG,KAAK,WACxBP,SAAUM,KAAKN,SACfQ,eAAgBF,KAAKJ,MAAMO,KAAKC,OAEpC,uBAAOC,QAASL,KAAKJ,MAAME,OAEjC,KAAC,EAXS,CAASQ,aAcNb,ICXTc,EAAI,kHAuBP,OAvBO,2CACR,WACI,MAAO,CACHC,MAAMR,KAAKJ,MAAMO,KAAKC,KAAK,OAAO,QAE1C,GAAC,oBAED,WACI,IAAOD,EAAMH,KAAKJ,MAAXO,KACT,OAAO,sBAAKJ,UAAU,OAAOU,MAAOT,KAAKU,iBAAiB,UAClD,sBAAKD,MAAO,CAACE,eAAgBR,EAAKC,KAAK,eAAe,QAAQ,UAC1D,qBAAKK,MAAO,CAACG,SAAS,GAAGC,WAAW,KAAK,SACxCV,EAAKW,QAEN,qBAAKL,MAAO,CAACG,SAAS,GAAGJ,MAAM,QAAQ,SACtCL,EAAKY,iBAGV,sBAAKhB,UAAU,SAAQ,UACnB,cAAC,EAAM,CAACD,GAAIK,EAAKL,GAAIK,KAAMA,EAAMN,UAAWG,KAAKJ,MAAMC,YACvD,wBAAQmB,QAAShB,KAAKJ,MAAMqB,WAAWC,KAAKlB,KAAKG,EAAKL,IAAKC,UAAU,aAAY,SAAC,WAGhG,KAAC,EAvBO,CAASO,aAgCJC,ICjCTY,EAAK,kHAQR,OARQ,mCACT,WAAU,IAAD,OACP,OAAOnB,KAAKJ,MAAMwB,MAAMC,KAAI,SAAA1B,GACxB,OAAO,cAAC,EAAI,CACAQ,KAAMR,EACNsB,WAAY,EAAKrB,MAAMqB,WACvBpB,UAAW,EAAKD,MAAMC,WAHhBF,EAAEG,GAIpB,GACN,KAAC,EARQ,CAASQ,aAiBLa,I,yCCjBTG,EAAQ,iKAkBT,OAlBS,oCACVC,MAAM,CACFT,MAAO,GACPC,YAAa,IAChB,EACDrB,SAAS,SAAAC,GACL,EAAK6B,SAAS,eAAE7B,EAAE8B,OAAOC,KAAQ/B,EAAE8B,OAAOE,OAC9C,EAAC,EACDC,SAAS,SAAAjC,GACL,EAAKC,MAAMiC,QAAQ,EAAKN,MAAMT,MAAM,EAAKS,MAAMR,aAC/CpB,EAAEmC,gBACN,EAAC,EACDC,MAAM,SAAApC,GACFA,EAAEmC,iBACF,EAAKN,SAAS,CACVV,MAAO,GACPC,YAAa,IAErB,EAAC,EAYA,OAZA,mCACD,WACI,OAAO,uBAAMhB,UAAU,OAAO6B,SAAU5B,KAAK4B,SAAS,UAClD,gCACI,uBAAOF,KAAK,QAAQzB,KAAK,OAAO+B,YAAY,YAAUtC,SAAUM,KAAKN,SAAUiC,MAAO3B,KAAKuB,MAAMT,QAAe,uBAChH,0BAAUY,KAAK,cAAcM,YAAY,iBAActC,SAAUM,KAAKN,SAAUiC,MAAO3B,KAAKuB,MAAMR,iBAEtG,gCACI,wBAAQd,KAAK,SAAQ,SAAC,YACtB,wBAAQe,QAAShB,KAAK+B,MAAM,SAAC,iBAGzC,KAAC,EA9BS,CAASzB,aAgCvBgB,EAASW,WAAW,CAChBJ,QAAQK,IAAUC,MAEPb,QCjCTc,EAAG,iKAwBN,OAxBM,oCACPb,MAAM,CACJH,MAAMA,GACP,EACDS,QAAQ,SAACf,EAAMC,GACb,IAAMsB,EAAQ,CACZvB,MAAMA,EACNC,YAAYA,EACZjB,GAAG,EAAKyB,MAAMH,MAAMkB,QAEtB,EAAKd,SAAS,CACZJ,MAAM,GAAD,mBAAK,EAAKG,MAAMH,OAAK,CAACiB,KAE/B,EAAC,EACDpB,WAAW,SAAAnB,GACT,IAAMyC,EAAS,EAAKhB,MAAMH,MAAMoB,QAAO,SAAArC,GAAI,OAAEA,EAAKL,KAAKA,CAAE,IACzD,EAAK0B,SAAS,CAACJ,MAAMmB,GACvB,EAAC,EACD1C,UAAU,SAAAC,GACR,IAAMyC,EAAS,EAAKhB,MAAMH,MAAMC,KAAI,SAAAlB,GAElC,OADGA,EAAKL,KAAKA,IAAIK,EAAKC,MAAMD,EAAKC,MAC1BD,CACT,IACA,EAAKqB,SAAS,CAACJ,MAAMmB,GACvB,EAAC,EAYA,OAZA,mCACD,WACE,OAAO,qBAAKxC,UAAU,MAAK,SACzB,gCACE,qBAAKA,UAAU,OAAM,SACnB,cAAC,EAAQ,CAAC8B,QAAS7B,KAAK6B,YAE1B,qBAAK9B,UAAU,OAAM,SACnB,cAAC,EAAK,CAACqB,MAAOpB,KAAKuB,MAAMH,MAAOH,WAAYjB,KAAKiB,WAAYpB,UAAWG,KAAKH,kBAIrF,KAAC,EApCM,CAASS,aAuCH8B,ICjCAK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJAQ,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.6ddbb26f.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport './Toggle.css';\nclass Toggle extends Component {\n  onChange=e=>{this.props.checkDone(this.props.id)}\n  render() {\n    return <div>\n        <input className=\"input-toggle\"\n            id={this.props.id} type=\"checkbox\" \n            onChange={this.onChange} \n            defaultChecked={this.props.task.done}>\n        </input>\n        <label htmlFor={this.props.id}></label>\n    </div>\n  }\n}\n\nexport default Toggle;","import React,{Component} from 'react';\nimport './Task.css';\nimport PropTypes from 'prop-types';\nimport Toggle from './Toggle';\n\nclass Task extends Component {\n  StyleCompleted(){\n      return {\n          color:this.props.task.done?\"#555\":\"black\",\n      }\n  }\n\n  render() {\n      const {task}=this.props;\n    return <div className=\"Task\" style={this.StyleCompleted()}>\n            <div style={{textDecoration: task.done?\"line-through\":\"none\"}}>\n                <div style={{fontSize:20,fontWeight:400}}>\n                {task.title}\n                </div>\n                <div style={{fontSize:14,color:\"#222\"}}>\n                {task.description}\n                </div>\n            </div>\n            <div className=\"group2\">\n                <Toggle id={task.id} task={task} checkDone={this.props.checkDone}/>\n                <button onClick={this.props.deleteTask.bind(this,task.id)} className=\"btn_delete\">X</button>\n            </div>\n        </div>;\n  }\n}\n\nTask.propTypes={\n    task:PropTypes.object.isRequired,\n    checkDone:PropTypes.func.isRequired,\n    deleteTask:PropTypes.func.isRequired\n}\n\nexport default Task;","import React,{Component} from 'react';\nimport Task from './Task';\nimport PropTypes from 'prop-types';\n\nclass Tasks extends Component {\n  render() {\n    return this.props.tasks.map(e=>{\n        return <Task key={e.id} \n                    task={e} \n                    deleteTask={this.props.deleteTask}\n                    checkDone={this.props.checkDone}/>\n        });\n  }\n}\n\nTasks.propTypes={\n  tasks:PropTypes.array.isRequired,\n  checkDone:PropTypes.func.isRequired,\n  deleteTask:PropTypes.func.isRequired\n}\n\nexport default Tasks;","import React,{Component} from 'react';\nimport './TaskForm.css'\nimport PropTypes from 'prop-types';\n\nclass TaskForm extends Component{\n    state={\n        title: '',\n        description: ''\n    }\n    onChange=e=>{\n        this.setState({[e.target.name] : e.target.value})\n    }\n    onSubmit=e=>{\n        this.props.addTask(this.state.title,this.state.description)\n        e.preventDefault()\n    }\n    clean=e=>{\n        e.preventDefault()\n        this.setState({\n            title: '',\n            description: ''\n        })\n    }\n    render(){\n        return <form className=\"Form\" onSubmit={this.onSubmit}>\n            <div>\n                <input name=\"title\" type=\"text\" placeholder=\"Título\"  onChange={this.onChange} value={this.state.title}></input><br/>\n                <textarea name=\"description\" placeholder=\"Descripción\" onChange={this.onChange} value={this.state.description}></textarea>\n            </div>\n            <div>\n                <button type=\"submit\">Guardar</button>\n                <button onClick={this.clean}>Limpiar</button>\n            </div>\n        </form>\n    }\n}\nTaskForm.protoTypes={\n    addTask:PropTypes.func\n}\nexport default TaskForm;","import React,{Component} from 'react';\nimport tasks from './sample/tasks.json';\nimport Tasks from './components/Tasks'\nimport './App.css';\nimport TaskForm from './components/TaskForm';\n\nclass App extends Component {\n  state={\n    tasks:tasks\n  }\n  addTask=(title,description)=>{\n    const newTask={\n      title:title,\n      description:description,\n      id:this.state.tasks.length\n    }\n    this.setState({\n      tasks:[...this.state.tasks,newTask]\n    })\n  }\n  deleteTask=id=>{\n    const newTasks=this.state.tasks.filter(task=>task.id!==id)\n    this.setState({tasks:newTasks})\n  }\n  checkDone=id=>{\n    const newTasks=this.state.tasks.map(task=>{\n      if(task.id===id) task.done=!task.done\n      return task\n    })\n    this.setState({tasks:newTasks})\n  }\n  render() {\n    return <div className=\"App\">\n      <div>\n        <div className=\"Card\">\n          <TaskForm addTask={this.addTask}/>\n        </div>\n        <div className=\"Card\">\n          <Tasks tasks={this.state.tasks} deleteTask={this.deleteTask} checkDone={this.checkDone}/>\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}